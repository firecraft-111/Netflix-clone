{"ast":null,"code":"var _jsxFileName = \"/Users/sumittanwar/COMP/Programs/Netflix Clone/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","base_url","Row","_ref","_s","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","backdrop_path","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/sumittanwar/COMP/Programs/Netflix Clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\"\n\nconst base_url= \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title, fetchUrl,isLargeRow}) {\n    const[movies, setMovies] = useState([]);\n\n    useEffect(()=> {\n     async function fetchData() {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results )\n        return request;\n     }\n     fetchData(); \n    }, [fetchUrl]);\n\n    console.table(movies);\n\n\n  return (\n    <div className='row'>\n        <h2>{title}</h2>   \n        <div className='row__posters'>\n            { /* posters */}\n\n            {movies.map(movie=>(\n                <img \n                key={movie.id}\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path:movie.backdrop_path\n                }`} alt={movie.name}/>\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default Row"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,QAAQ,GAAE,sCAAsC;AAEtD,SAASC,GAAGA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAACC,KAAK;IAAEC,QAAQ;IAACC;EAAU,CAAC,GAAAJ,IAAA;EACrC,MAAK,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEvCC,SAAS,CAAC,MAAK;IACd,eAAea,SAASA,CAAA,EAAG;MACxB,MAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACN,QAAQ,CAAC;MACzCG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAQ,CAAC;MAChC,OAAOH,OAAO;IACjB;IACAD,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEdS,OAAO,CAACC,KAAK,CAACR,MAAM,CAAC;EAGvB,oBACER,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBlB,OAAA;MAAAkB,QAAA,EAAKb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAGxBV,MAAM,CAACe,GAAG,CAACC,KAAK,iBACbxB,OAAA;QAEAiB,SAAS,EAAG,eAAcV,UAAU,IAAI,kBAAmB,EAAE;QAC7DkB,GAAG,EAAG,GAAExB,QAAS,GACfM,UAAU,GAAGiB,KAAK,CAACE,WAAW,GAACF,KAAK,CAACG,aACtC,EAAE;QAACC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAJfL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIQ,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAClB,EAAA,CAhCQF,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkCZ,eAAeA,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}